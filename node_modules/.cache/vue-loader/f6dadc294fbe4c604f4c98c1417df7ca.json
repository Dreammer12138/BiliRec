{"remainingRequest":"/home/seenight/文档/Docker/Controller/RecStream/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/seenight/文档/Docker/Controller/RecStream/src/views/Settings.vue?vue&type=style&index=0&id=3be3640f&scoped=true&lang=css&","dependencies":[{"path":"/home/seenight/文档/Docker/Controller/RecStream/src/views/Settings.vue","mtime":1618047505026},{"path":"/home/seenight/文档/Docker/Controller/RecStream/node_modules/css-loader/dist/cjs.js","mtime":1617956951445},{"path":"/home/seenight/文档/Docker/Controller/RecStream/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1617956953101},{"path":"/home/seenight/文档/Docker/Controller/RecStream/node_modules/postcss-loader/src/index.js","mtime":1617956952979},{"path":"/home/seenight/文档/Docker/Controller/RecStream/node_modules/cache-loader/dist/cjs.js","mtime":1617956900225},{"path":"/home/seenight/文档/Docker/Controller/RecStream/node_modules/vue-loader/lib/index.js","mtime":1617956953101}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWZvcm0taXRlbSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQo="},{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA","file":"Settings.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"settings\">\n    <div class=\"topBar\">\n      <el-page-header @back=\"goBack\" :content=\"headerContent\"></el-page-header>\n    </div>\n    <div class=\"content\">\n      <el-col :span=\"12\">\n        <el-form ref=\"form\" :model=\"settings\" label-width=\"6rem\">\n          <el-form-item label=\"存储路径\">\n            <el-input v-model=\"settings.savePath\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"监听间隔\">\n            <el-slider v-model=\"settings.listenInterval\" :min=\"1000\" :max=\"10000\" :step=\"1000\"> </el-slider>\n          </el-form-item>\n          <el-form-item label=\"存储格式\">\n            <el-select v-model=\"settings.format\" placeholder=\"请选择存储格式\">\n              <el-option label=\"MP4\" value=\"MP4\"></el-option>\n              <el-option label=\"FLV\" value=\"FLV\"></el-option>\n              <el-option label=\"AVI\" value=\"AVI\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"网络代理\">\n            <el-switch v-model=\"settings.proxyOn\"></el-switch>\n          </el-form-item>\n          <el-form-item label=\"代理地址\">\n            <el-input v-model=\"settings.proxyHttp\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"代理用户名\">\n            <el-input v-model=\"settings.proxyUser\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"代理密码\">\n            <el-input v-model=\"settings.proxyPassword\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"onSubmit\">保存</el-button>\n          </el-form-item>\n        </el-form>\n      </el-col>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"files\",\n  data() {\n    return {\n      headerContent: \"设置\",\n      settings: {\n        savePath: \"\",\n        format: \"\",\n        listenInterval: 2000,\n        proxyOn: false,\n        proxyHttp: \"\",\n        proxyUser: \"\",\n        proxyPassword: \"\",\n      },\n    };\n  },\n  methods: {\n    goBack() {\n      this.$store.state.navActive = \"/\";\n      this.$router.push(\"/\");\n    },\n    onSubmit() {\n      const API = this.$store.state.API;\n      let v = this;\n      v.$axios.post(API.setting.update, v.settings).then(res => {\n        if (res.data.status) {\n          this.$notify.success({\n            title: '成功',\n            message: '配置已修改'\n          });\n        }\n        else {\n          this.$notify.error({\n            title: '错误',\n            message: res.data.msg\n          });\n        }\n      });\n    },\n    getSettings() {\n      const API = this.$store.state.API;\n      let v = this;\n      v.$axios.get(API.setting.get).then(res => {\n        for (let setting in res.data) {\n          v.settings[res.data[setting].key] = res.data[setting].value;\n        }\n      })\n    }\n  },\n  mounted() {\n    this.getSettings();\n  }\n};\n</script>\n\n<style scoped>\n.el-form-item {\n  text-align: left;\n}\n</style>"]}]}