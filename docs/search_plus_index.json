{"./":{"url":"./","title":"简介","keywords":"","body":"简介 BiliRec是一项基于Python的Bilibili自动录播器开源项目。 主要特性 BiliRec支持本地部署，并且兼容Windows和Linux系统，可部署在RespberryPi等ARM平台的操作系统上。 注意事项 本项目为开源项目，允许随意下载使用 在使用前请仔细阅读使用说明 如果您有更好的灵感欢迎您随时贡献代码 如果您在使用过程中遇到无法解决的问题，请在本仓库下直接提交Issue 本项目为开源项目，禁止任何人或团体使用该项目以任何形式进行盈利活动 const gitalk = new Gitalk({ clientID: \"a9f7d3f091928b45e225\", clientSecret: \"af98a2e872ffd57b4443842cd200d5acf50d7f7d\", repo: \"BiliRec\", owner: \"Dreammer12138\", admin: ['Dreammer12138'], id: location.pathname, }); gitalk.render('gitalk-container'); Copyright © 1145141919810.wang 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-07-23 10:41:13 "},"FromAuthor.html":{"url":"FromAuthor.html","title":"前言","keywords":"","body":"前言 BiliRec其实是我闲暇之余的一个构想，然后趁着疫情期间闲着就着手开始写了。 我自己写代码的习惯说实话挺差的所以这玩意儿的可读性应该不咋地，献丑了。 BiliRec的工作模式说白了就是用Streamlink（一个基于Python的开源项目）去监测直播推流并且读取视频流，然后由FFMPEG进行编码和保存，一个非常简单粗暴的方式。 我在2018年暑假期间就写过一个自动录播的脚本，当然那个脚本问题也挺大的。这次主要就是改了一些小地方的问题然后做了Linux和Windows的适配。最近也在学习Django的项目开发所以就给加入了一个可视化的Web端监控模块，这个模块目前还在开发中并不完善，姑且算是能拿出来看看的程度，后续还会进行开发。 Streamlink也好，FFMPEG也好，对于新手来说着实不太友好，特别是FFMPEG的API过于晦涩难懂，最后我还是放弃了调用API直接暴力os.system。 这个项目仍有很多问题，我调试的时候并没有进行多方面的测试只是保证它能正常运行而已。如果在使用过程中遇到问题还请多多反馈，感谢支持。 const gitalk = new Gitalk({ clientID: \"a9f7d3f091928b45e225\", clientSecret: \"af98a2e872ffd57b4443842cd200d5acf50d7f7d\", repo: \"BiliRec\", owner: \"Dreammer12138\", admin: ['Dreammer12138'], id: location.pathname }); gitalk.render('gitalk-container'); Copyright © 1145141919810.wang 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-07-23 10:09:45 "},"Requirement.html":{"url":"Requirement.html","title":"依赖","keywords":"","body":"依赖 BiliRec依赖于以下内容/项目： Python 3 及以上（3.5 / 3.6 / 3.7 / 3.8） Streamlink FFMPEG Sqlite3 请在安装BiliRec前保证已经安装以上内容 安装Python3 Windows 访问Python官网自行下载安装包进行安装 Linux 以Ubuntu为例 $ sudo apt update $ sudo apt install python3 python3-pip 安装Streamlink Windows PS > pip install streamlink Linux $ sudo pip3 install streamlink 安装FFMPEG Windows 从FFMPEG官网下载FFMPEG 解压压缩包 配置环境变量 Linux $ sudo apt install ffmpeg $ sudo ln -s /usr/local/ffmpeg2/ffprobe /usr/local/bin/ffprobe $ sudo ln -s /usr/local/ffmpeg2/ffmpeg /usr/local/bin/ffmpeg 安装Sqlite3 Linux 大多数Linux发行版会自带Sqlite3，如果你的Linux系统没有Sqlite3请自行安装 Ubuntu / Debian $ sudo apt install sqlite3 CentOS $ sudo yum install sqlite-devel Windows 访问Sqlite官网，在Windows分区下下载sqlite-tools-*.zip和sqlite-dll-*.zip文件 新建一个文件夹，将这两个安装包中的文件全部解压到文件夹中 配置环境变量 const gitalk = new Gitalk({ clientID: \"a9f7d3f091928b45e225\", clientSecret: \"af98a2e872ffd57b4443842cd200d5acf50d7f7d\", repo: \"BiliRec\", owner: \"Dreammer12138\", admin: ['Dreammer12138'], id: location.pathname }); gitalk.render('gitalk-container'); Copyright © 1145141919810.wang 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-08-04 12:55:28 "},"Install.html":{"url":"Install.html","title":"安装","keywords":"","body":"安装 请确保已经安装好依赖环境 从Releases中下载最新版本的安装脚本 Windows用户请下载install.bat文件和initialization.sql文件 Linux用户请下载install.sh文件和initialization.sql文件 暂时没有对MacOS用户的安装支持（PS:穷逼买不起苹果所以不会写），MacOS用户请自行克隆代码并初始化sqlite3数据库，可以参考initialization.sql脚本 新建一个文件夹用来存放BiliRec文件，并把下载好的脚本文件放在文件夹中 运行脚本 Windows用户可以使用Powershell、CMD或者Cmder运行install.bat install.bat Linux用户直接在shell环境下运行install.sh文件即可，注意运行之前需要授予install.sh运行权限（无脑777），需要sudo权限 sudo install.bat const gitalk = new Gitalk({ clientID: \"a9f7d3f091928b45e225\", clientSecret: \"af98a2e872ffd57b4443842cd200d5acf50d7f7d\", repo: \"BiliRec\", owner: \"Dreammer12138\", admin: ['Dreammer12138'], id: location.pathname }); gitalk.render('gitalk-container'); Copyright © 1145141919810.wang 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-08-04 12:49:01 "},"Run.html":{"url":"Run.html","title":"运行","keywords":"","body":"运行 Windows PS > python manage.py runserver 0.0.0.0: --insecure Linux $ sudo python3 manage.py runserver 0.0.0.0: --insecure 参数 --port 端口 PS：建议使用8000端口，如果要使用其他端口，必须同时修改db.sqlite3中Config_config数据表中的port字段 Web端监控 启动脚本以后打开浏览器，访问http://localhost: const gitalk = new Gitalk({ clientID: \"a9f7d3f091928b45e225\", clientSecret: \"af98a2e872ffd57b4443842cd200d5acf50d7f7d\", repo: \"BiliRec\", owner: \"Dreammer12138\", admin: ['Dreammer12138'], id: location.pathname }); gitalk.render('gitalk-container'); Copyright © 1145141919810.wang 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-08-04 12:57:25 "},"UpdateLog.html":{"url":"UpdateLog.html","title":"更新记录","keywords":"","body":"更新日志 2020 - 08 - 04 简化安装流程，补全依赖环境 2020 - 08 - 03 优化了结构模型，优化了界面UI，简化了命令行操作 2020 - 07 - 25 更新了直播日历 2020 - 07 - 23 第一个发行版 const gitalk = new Gitalk({ clientID: \"a9f7d3f091928b45e225\", clientSecret: \"af98a2e872ffd57b4443842cd200d5acf50d7f7d\", repo: \"BiliRec\", owner: \"Dreammer12138\", admin: ['Dreammer12138'], id: location.pathname }); gitalk.render('gitalk-container'); Copyright © 1145141919810.wang 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-08-04 12:58:26 "}}